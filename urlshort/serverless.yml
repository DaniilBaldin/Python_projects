service: urlshort
frameworkVersion: '3'

custom:
    domainName: ${opt:stage, self:provider.stage}.perfsys.cf
    hosted_zonaID: ''
    ssl_arn: ''

provider:
    name: aws
    runtime: python3.8
    stage: dbaldin
    region: us-east-1
    versionFunctions: false
    iam:
        role:
            statements:
                - Effect: 'Allow'
                  Action:
                      - 'dynamodb:*'
                  Resource: { 'Fn::GetAtt': ['Urls', 'Arn'] }
    environment:
        DYNAMODB_TABLE: ${self:service}-${self:provider.stage}
        DNS_RECORD: !Join
            - ''
            - - 'https://'
              - ${self:custom.domainName}
              - '/'

functions:
    create:
        handler: source.create.handler
        events:
            - http:
                  path: /
                  method: post
    get:
        handler: source.get.handler
        events:
            - http:
                  path: /{url_id}
                  method: get

resources:
    Resources:
        Urls:
            Type: AWS::DynamoDB::Table
            Properties:
                AttributeDefinitions:
                    - AttributeName: url_id
                      AttributeType: S
                KeySchema:
                    - AttributeName: url_id
                      KeyType: HASH
                ProvisionedThroughput:
                    ReadCapacityUnits: 1
                    WriteCapacityUnits: 1
                TableName: ${self:provider.environment.DYNAMODB_TABLE}

        myDomainName:
            Type: 'AWS::ApiGateway::DomainName'
            Properties:
                CertificateArn: ${self:custom.ssl_arn}
                DomainName: ${self:custom.domainName}
        myMapping:
            Type: 'AWS::ApiGateway::BasePathMapping'
            DependsOn:
                - myDomainName
            Properties:
                BasePath: ''
                Stage: ${opt:stage, self:provider.stage}
                DomainName: ${self:custom.domainName}
                RestApiId: !Ref ApiGatewayRestApi
        ApiRoute53Record:
            Type: AWS::Route53::RecordSetGroup
            Properties:
                HostedZoneId: ${self:custom.hosted_zonaID}
                RecordSets:
                    - Name: ${self:custom.domainName}
                      Type: A
                      AliasTarget:
                          HostedZoneId: !GetAtt myDomainName.DistributionHostedZoneId
                          DNSName: !GetAtt myDomainName.DistributionDomainName
